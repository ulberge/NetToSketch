import numpy as np
# import matplotlib.pyplot as plt

# arr=[[-0.00179003,-0.04348302,-0.01427152,0.00414203,-0.02243348,-0.04871646
# ,-0.03938195,-0.04693028,-0.05333563,-0.01849348,0.05147702,0.00344113
# ,-0.00644579,-0.03623974,-0.02296856]
# ,[0.01867167,-0.03065435,-0.00128002,0.02146231,0.01913598,-0.02483957
# ,-0.04293677,-0.03839984,-0.00488442,0.04096382,0.03845322,-0.0293865
# ,-0.03620642,-0.03209851,-0.01479603]
# ,[0.02358759,-0.03064566,0.00180822,0.0056906,-0.01650596,-0.04789691
# ,-0.04728113,-0.02290125,0.02171149,0.05767176,0.04542853,-0.0220825
# ,0.00408392,-0.01374077,0.00524061]
# ,[0.0176191,-0.03308061,-0.011746,-0.00306626,-0.04564876,-0.05872195
# ,-0.03697016,-0.00011543,0.03865425,0.05479782,0.04004451,-0.01495609
# ,0.00873824,-0.00952585,-0.0182829,]
# ,[0.0047478,-0.01976346,-0.0102286,-0.01089028,-0.05373139,-0.06949493
# ,-0.04084638,0.01801894,0.04240366,0.02408984,-0.00418062,-0.04815938
# ,-0.0269838,-0.02607653,-0.01843206]
# ,[0.00621097,-0.0163902,0.00377066,-0.01443473,-0.04964151,-0.05951729
# ,-0.01153665,0.04351225,0.05035855,0.01172227,-0.02835997,-0.06164812
# ,-0.05038054,-0.04775282,-0.01990382]
# ,[-0.00257182,-0.03175666,-0.00696149,-0.02869674,-0.04747232,-0.05924393
# ,0.00921725,0.05375374,0.03965709,-0.01565703,-0.03185596,-0.04691469
# ,-0.01708928,-0.02735866,-0.00855245]
# ,[-0.00145383,-0.02612853,-0.0284462,-0.05417452,-0.05752223,-0.04049136
# ,0.01661295,0.0426583,0.01716601,-0.02155742,-0.02205019,-0.02547527
# ,-0.00785176,-0.02149879,-0.00291028]
# ,[0.00243359,-0.0117068,-0.02173525,-0.02658393,-0.06106976,-0.03025935
# ,0.03663508,0.0395288,0.01753076,-0.02005744,-0.02835068,-0.03274339
# ,-0.01717131,-0.03200732,-0.00264645]
# ,[0.01231236,-0.01394643,-0.01143694,-0.04846214,-0.04642893,-0.03356329
# ,0.02873621,0.05528542,0.02423189,-0.02028468,-0.01639417,-0.0531238
# ,-0.05064453,-0.04021399,-0.00035144]
# ,[0.03984464,-0.0102852,-0.02611177,-0.06898233,-0.06411945,-0.00936937
# ,0.06385195,0.06221664,0.02886161,0.00169197,-0.00945973,-0.03563617
# ,-0.05518061,-0.04431431,0.0053225,]
# ,[0.02350683,-0.00150172,-0.04184083,-0.08542827,-0.06767377,0.03990129
# ,0.09521528,0.05230585,0.00292412,-0.01118328,0.00013986,-0.03214947
# ,-0.04921979,-0.04029109,0.01082157]
# ,[0.02755338,-0.00920865,-0.02250546,-0.07777785,-0.06042354,0.0654707
# ,0.07911287,0.01540579,-0.02051915,0.0042501,0.00616204,-0.05859192
# ,-0.06032658,-0.03726099,0.03407321]
# ,[0.01982708,-0.0176465,-0.0531376,-0.09488172,-0.05055567,0.04652015
# ,0.03312059,-0.00146699,-0.03068978,-0.01483371,-0.02743535,-0.05167814
# ,-0.04793002,-0.02235438,0.03054984]
# ,[0.00100847,-0.06167403,-0.06592933,-0.05944551,0.00439907,0.10426117
# ,0.07149024,0.04457315,0.01137507,0.01007779,-0.03188596,-0.05490265
# ,-0.03838791,-0.02046986,0.06835179]]

# arr = np.array(arr)
# arr_neg = np.where(arr > 0, 0, arr)
# print(arr_neg)

# b = -0.02443589

# plt.figure()
# for i, row in enumerate(arr):
#     plt.subplot(len(arr), 1, i + 1)
#     plt.bar(np.arange(len(row)), row)
#     plt.bar(np.arange(len(arr_neg[i])), arr_neg[i])
# plt.show()

# L1 - lines
weights1 = np.array([
    [
        [  # vertical
            [0, 0, 0, 0, 0],
            [0, -1, 2, -1, 0],
            [0, -1, 2, -1, 0],
            [0, -1, 2, -1, 0],
            [0, 0, 0, 0, 0]
        ],
        [  # horizontal
            [0, 0, 0, 0, 0],
            [0, -1, -1, -1, 0],
            [0, 2, 2, 2, 0],
            [0, -1, -1, -1, 0],
            [0, 0, 0, 0, 0]
        ],
    ]
])
weights1 = np.einsum('fchw->hwcf', weights1)
biases1 = np.array([
    0, 0,
])

# L2 - corners
diags = [
    [
        [1, 1, 0.5],
        [1, 0.5, 0],
        [0.5, 0, 0]
    ],
    [
        [0, 0, 0.5],
        [0, 0.5, 1],
        [0.5, 1, 1]
    ],
    [
        [0.5, 1, 1],
        [0, 0.5, 1],
        [0, 0, 0.5]
    ],
    [
        [0.5, 0, 0],
        [1, 0.5, 0],
        [1, 1, 0.5]
    ],
]
weights2 = np.array([
    [  # top left
        diags[3],
        diags[2]
    ],
    [  # top right
        diags[1],
        diags[0]
    ],
    [  # bottom left
        diags[0],
        diags[1]
    ],
    [  # bottom right
        diags[2],
        diags[3]
    ],
])
weights2 = np.einsum('fchw->hwcf', weights2)
biases2 = np.array([
    0, 0
])

# L3 - square
weights3 = np.array([
    [
        [
            [1, 0],
            [0, 0],
        ],
        [
            [0, 1],
            [0, 0],
        ],
        [
            [0, 0],
            [1, 0],
        ],
        [
            [0, 0],
            [0, 1],
        ]
    ],
])
weights3 = np.einsum('fchw->hwcf', weights3)
biases3 = np.array([
    0, 0
])

weights = [weights1, weights2, weights3]
biases = [biases1, biases2, biases3]
